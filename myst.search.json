{"version":"1","records":[{"hierarchy":{"lvl1":"MPAS+JEDI Cookbook"},"type":"lvl1","url":"/","position":0},{"hierarchy":{"lvl1":"MPAS+JEDI Cookbook"},"content":"\n\n\n\n\n\n\n\n\n\nThis Project Pythia Cookbook focuses on analyzing, visualizing, and understanding output from the MPAS model and the JEDI system on an unstructured grid, as well as evaluating data assimilation performance in observation space.","type":"content","url":"/","position":1},{"hierarchy":{"lvl1":"MPAS+JEDI Cookbook","lvl2":"Motivation"},"type":"lvl2","url":"/#motivation","position":2},{"hierarchy":{"lvl1":"MPAS+JEDI Cookbook","lvl2":"Motivation"},"content":"NOAA’s next generation Rapid Refresh Forecast System (RRFS) is built on the MPAS (Model for Prediction Accross Scals) Model and the JEDI (Joint Effort for Data assimilation Integration) system. While both MPAS and JEDI are powerful tools, they can also be complex to use and interpret. This cookbook will demonstrate how to explore MPAS forecasts and JEDI analyses directly on the unstructed grid using the \n\nUXarray package. It also includes examples for examining JEDI analyses in observation space.","type":"content","url":"/#motivation","position":3},{"hierarchy":{"lvl1":"MPAS+JEDI Cookbook","lvl2":"Authors"},"type":"lvl2","url":"/#authors","position":4},{"hierarchy":{"lvl1":"MPAS+JEDI Cookbook","lvl2":"Authors"},"content":"Guoqing Ge, \n\nOrhan Eroglu, etc.(Acknowledge primary content authors here)","type":"content","url":"/#authors","position":5},{"hierarchy":{"lvl1":"MPAS+JEDI Cookbook","lvl3":"Contributors","lvl2":"Authors"},"type":"lvl3","url":"/#contributors","position":6},{"hierarchy":{"lvl1":"MPAS+JEDI Cookbook","lvl3":"Contributors","lvl2":"Authors"},"content":"","type":"content","url":"/#contributors","position":7},{"hierarchy":{"lvl1":"MPAS+JEDI Cookbook","lvl2":"Structure"},"type":"lvl2","url":"/#structure","position":8},{"hierarchy":{"lvl1":"MPAS+JEDI Cookbook","lvl2":"Structure"},"content":"(State one or more sections that will comprise the notebook. E.g., This cookbook is broken up into two main sections - “Foundations” and “Example Workflows.” Then, describe each section below.)","type":"content","url":"/#structure","position":9},{"hierarchy":{"lvl1":"MPAS+JEDI Cookbook","lvl3":"Section 1 ( Replace with the title of this section, e.g. “Foundations” )","lvl2":"Structure"},"type":"lvl3","url":"/#section-1-replace-with-the-title-of-this-section-e-g-foundations","position":10},{"hierarchy":{"lvl1":"MPAS+JEDI Cookbook","lvl3":"Section 1 ( Replace with the title of this section, e.g. “Foundations” )","lvl2":"Structure"},"content":"(Add content for this section, e.g., \"The foundational content includes ... \")","type":"content","url":"/#section-1-replace-with-the-title-of-this-section-e-g-foundations","position":11},{"hierarchy":{"lvl1":"MPAS+JEDI Cookbook","lvl3":"Section 2 ( Replace with the title of this section, e.g. “Example workflows” )","lvl2":"Structure"},"type":"lvl3","url":"/#section-2-replace-with-the-title-of-this-section-e-g-example-workflows","position":12},{"hierarchy":{"lvl1":"MPAS+JEDI Cookbook","lvl3":"Section 2 ( Replace with the title of this section, e.g. “Example workflows” )","lvl2":"Structure"},"content":"(Add content for this section, e.g., \"Example workflows include ... \")","type":"content","url":"/#section-2-replace-with-the-title-of-this-section-e-g-example-workflows","position":13},{"hierarchy":{"lvl1":"MPAS+JEDI Cookbook","lvl2":"Running the Notebooks"},"type":"lvl2","url":"/#running-the-notebooks","position":14},{"hierarchy":{"lvl1":"MPAS+JEDI Cookbook","lvl2":"Running the Notebooks"},"content":"You can either run the notebook using \n\nBinder or on your local machine.","type":"content","url":"/#running-the-notebooks","position":15},{"hierarchy":{"lvl1":"MPAS+JEDI Cookbook","lvl3":"Running on Binder","lvl2":"Running the Notebooks"},"type":"lvl3","url":"/#running-on-binder","position":16},{"hierarchy":{"lvl1":"MPAS+JEDI Cookbook","lvl3":"Running on Binder","lvl2":"Running the Notebooks"},"content":"The simplest way to interact with a Jupyter Notebook is through \n\nBinder, which enables the execution of a \n\nJupyter Book in the cloud.All you need to know is how to launch a Pythia Cookbooks chapter via Binder. Simply navigate your mouse to the top right corner of the book chapter you are viewing and click on the rocket ship icon, (see figure below), and be sure to select “launch Binder”. After a moment you should be presented with a notebook that you can interact with. I.e. you’ll be able to execute and even change the example programs. You’ll see that the code cells have no output at first, until you execute them by pressing Shift+Enter. Complete details on how to interact with a live Jupyter notebook are described in \n\nGetting Started with Jupyter.\n\nNote, not all Cookbook chapters are executable. If you do not see the rocket ship icon, such as on this page, you are not viewing an executable book chapter.","type":"content","url":"/#running-on-binder","position":17},{"hierarchy":{"lvl1":"MPAS+JEDI Cookbook","lvl3":"Running on Your Own Machine","lvl2":"Running the Notebooks"},"type":"lvl3","url":"/#running-on-your-own-machine","position":18},{"hierarchy":{"lvl1":"MPAS+JEDI Cookbook","lvl3":"Running on Your Own Machine","lvl2":"Running the Notebooks"},"content":"If you are interested in running this material locally on your computer, you will need to follow this workflow:\n\nClone the https://github.com/ProjectPythia/mpas-jedi-cookbook repository: git clone https://github.com/ProjectPythia/mpas-jedi-cookbook\n\nMove into the mpas-jedi-cookbook directorycd mpas-jedi-cookbook\n\nCreate and activate your conda environment from the environment.yml fileconda env create -f environment.yml\nconda activate mpas-jedi-cookbook\n\nMove into the notebooks directory and start up Jupyterlabcd notebooks/\njupyter lab","type":"content","url":"/#running-on-your-own-machine","position":19},{"hierarchy":{"lvl1":"How to Cite This Cookbook"},"type":"lvl1","url":"/notebooks/how-to-cite","position":0},{"hierarchy":{"lvl1":"How to Cite This Cookbook"},"content":"The material in this Project Pythia Cookbook is licensed for free and open consumption and reuse. All code is served under \n\nApache 2.0, while all non-code content is licensed under \n\nCreative Commons BY 4.0 (CC BY 4.0). Effectively, this means you are free to share and adapt this material so long as you give appropriate credit to the Cookbook authors and the Project Pythia community.\n\nThe source code for the book is \n\nreleased on GitHub and archived on Zenodo. This DOI will always resolve to the latest release of the book source:\n\n","type":"content","url":"/notebooks/how-to-cite","position":1},{"hierarchy":{"lvl1":"Visualization of JEDI analysis with UXarray in the model space"},"type":"lvl1","url":"/notebooks/jedi-mpas","position":0},{"hierarchy":{"lvl1":"Visualization of JEDI analysis with UXarray in the model space"},"content":"","type":"content","url":"/notebooks/jedi-mpas","position":1},{"hierarchy":{"lvl1":"Visualization of JEDI analysis with UXarray in the model space","lvl3":"In this section, you’ll learn:"},"type":"lvl3","url":"/notebooks/jedi-mpas#in-this-section-youll-learn","position":2},{"hierarchy":{"lvl1":"Visualization of JEDI analysis with UXarray in the model space","lvl3":"In this section, you’ll learn:"},"content":"Utilizing ...","type":"content","url":"/notebooks/jedi-mpas#in-this-section-youll-learn","position":3},{"hierarchy":{"lvl1":"Visualization of JEDI analysis with UXarray in the model space","lvl3":"Related Documentation"},"type":"lvl3","url":"/notebooks/jedi-mpas#related-documentation","position":4},{"hierarchy":{"lvl1":"Visualization of JEDI analysis with UXarray in the model space","lvl3":"Related Documentation"},"content":"URL title\n\n","type":"content","url":"/notebooks/jedi-mpas#related-documentation","position":5},{"hierarchy":{"lvl1":"Visualization of JEDI analysis with UXarray in the model space","lvl3":"Prerequisites"},"type":"lvl3","url":"/notebooks/jedi-mpas#prerequisites","position":6},{"hierarchy":{"lvl1":"Visualization of JEDI analysis with UXarray in the model space","lvl3":"Prerequisites"},"content":"Concepts\n\nImportance\n\nNotes\n\nURL title\n\nNecessary OR Helpful?\n\n\n\nTime to learn: 30 minutes?\n\n","type":"content","url":"/notebooks/jedi-mpas#prerequisites","position":7},{"hierarchy":{"lvl1":"Visualization of JEDI analysis with UXarray in the model space","lvl2":"Import packages"},"type":"lvl2","url":"/notebooks/jedi-mpas#import-packages","position":8},{"hierarchy":{"lvl1":"Visualization of JEDI analysis with UXarray in the model space","lvl2":"Import packages"},"content":"\n\n%%time \n\n# autoload external python modules if they changed\n%load_ext autoreload\n%autoreload 2\n\n# add ../funcs to the current path\nimport sys, os\nsys.path.append(os.path.join(os.getcwd(), \"..\")) \n\n# import modules\nimport warnings\nimport math\n\nimport cartopy.crs as ccrs\nimport geoviews as gv\nimport geoviews.feature as gf\nimport holoviews as hv\nimport hvplot.xarray\nfrom holoviews import opts\nimport matplotlib.pyplot as plt\n\nimport s3fs\n\nimport geopandas as gp\nimport numpy as np\nimport uxarray as ux\nimport xarray as xr\n\n","type":"content","url":"/notebooks/jedi-mpas#import-packages","position":9},{"hierarchy":{"lvl1":"Visualization of JEDI analysis with UXarray in the model space","lvl2":"Configure visualization tools"},"type":"lvl2","url":"/notebooks/jedi-mpas#configure-visualization-tools","position":10},{"hierarchy":{"lvl1":"Visualization of JEDI analysis with UXarray in the model space","lvl2":"Configure visualization tools"},"content":"\n\n# hv.extension(\"bokeh\")\n# hv.extension(\"matplotlib\")\n\n\n# common border lines\ncoast_lines = gf.coastline(projection=ccrs.PlateCarree(), line_width=1, scale=\"50m\")\nstate_lines = gf.states(projection=ccrs.PlateCarree(), line_width=1, line_color='gray', scale=\"50m\")\n\n","type":"content","url":"/notebooks/jedi-mpas#configure-visualization-tools","position":11},{"hierarchy":{"lvl1":"Visualization of JEDI analysis with UXarray in the model space","lvl2":"Load MPAS data"},"type":"lvl2","url":"/notebooks/jedi-mpas#load-mpas-data","position":12},{"hierarchy":{"lvl1":"Visualization of JEDI analysis with UXarray in the model space","lvl2":"Load MPAS data"},"content":"Depending on the network, the data loading process may take a few minutes.\n\nThere are two ways to load MPAS data:\n\nDownload all example data from JetStream2 to local and them load them locally. This approach allows you to download the data once and reuse it in notebooks.\n\nAccess the JetStream2 S3 objects on demand. In this case, each notebook (incluidng restarting a notebook) will download the required data as needed, which may lead to repeated downloads.\n\ndata_load_method = 1  # or 2\n\n","type":"content","url":"/notebooks/jedi-mpas#load-mpas-data","position":13},{"hierarchy":{"lvl1":"Visualization of JEDI analysis with UXarray in the model space","lvl3":"Download all example data to your local disk","lvl2":"Load MPAS data"},"type":"lvl3","url":"/notebooks/jedi-mpas#download-all-example-data-to-your-local-disk","position":14},{"hierarchy":{"lvl1":"Visualization of JEDI analysis with UXarray in the model space","lvl3":"Download all example data to your local disk","lvl2":"Load MPAS data"},"content":"\n\n%%time\n# This cell only needs to run once in a machine and can be converted to a MarkDown cell before publishing the cookbook\n\nlocal_dir=\"/tmp\"\nif data_load_method == 1 and not os.path.exists(local_dir + \"/conus12km/bkg/mpasout.2024-05-06_01.00.00.nc\"):\n    jetstream_url = 'https://js2.jetstream-cloud.org:8001/'\n    fs = s3fs.S3FileSystem(anon=True, asynchronous=False,client_kwargs=dict(endpoint_url=jetstream_url))\n    conus12_path = 's3://pythia/mpas/conus12km'\n    #fs.get(conus12_path, local_dir, recursive=True)\n    print(\"Data downloading completed\")\nelse:\n    print(\"Skip..., either data is available in local or data_load_method is NOT 1\")\n\n# path to the MPAS data\nif data_load_method == 1:\n    grid_file = local_dir + \"/conus12km/conus12km.invariant.nc_L60_GFS\"\n    ana_file = local_dir + \"/conus12km/bkg/mpasout.2024-05-06_01.00.00.nc\"\n    bkg_file = local_dir + \"/conus12km/ana/mpasout.2024-05-06_01.00.00.nc\"\n\n","type":"content","url":"/notebooks/jedi-mpas#download-all-example-data-to-your-local-disk","position":15},{"hierarchy":{"lvl1":"Visualization of JEDI analysis with UXarray in the model space","lvl3":"access JetStream2 and S3 objects on demand","lvl2":"Load MPAS data"},"type":"lvl3","url":"/notebooks/jedi-mpas#access-jetstream2-and-s3-objects-on-demand","position":16},{"hierarchy":{"lvl1":"Visualization of JEDI analysis with UXarray in the model space","lvl3":"access JetStream2 and S3 objects on demand","lvl2":"Load MPAS data"},"content":"\n\n%%time\n## **!! skip this section if data has been downloaded to local in the above !!**\nif data_load_method == 2:\n    jetstream_url = 'https://js2.jetstream-cloud.org:8001/'\n    fs = s3fs.S3FileSystem(anon=True, asynchronous=False,client_kwargs=dict(endpoint_url=jetstream_url))\n    conus12_path = 's3://pythia/mpas/conus12km'\n    \n    grid_url=f\"{conus12_path}/conus12km.invariant.nc_L60_GFS\"\n    bkg_url=f\"{conus12_path}/bkg/mpasout.2024-05-06_01.00.00.nc\"\n    ana_url=f\"{conus12_path}/ana/mpasout.2024-05-06_01.00.00.nc\"\n    \n    grid_file = fs.open(grid_url)\n    ana_file = fs.open(ana_url)\n    bkg_file = fs.open(bkg_url)\nelse:\n    print(\"Skip..., data_load_method is NOT 2\")\n\n","type":"content","url":"/notebooks/jedi-mpas#access-jetstream2-and-s3-objects-on-demand","position":17},{"hierarchy":{"lvl1":"Visualization of JEDI analysis with UXarray in the model space","lvl3":"Open UXarray datasets","lvl2":"Load MPAS data"},"type":"lvl3","url":"/notebooks/jedi-mpas#open-uxarray-datasets","position":18},{"hierarchy":{"lvl1":"Visualization of JEDI analysis with UXarray in the model space","lvl3":"Open UXarray datasets","lvl2":"Load MPAS data"},"content":"\n\n%%time \nuxds_a = ux.open_dataset(grid_file, ana_file)\nuxds_b = ux.open_dataset(grid_file, bkg_file)\n\n%%time \n\nuxds_a = ux.open_dataset(grid_file, ana_file)\nuxds_b = ux.open_dataset(grid_file, bkg_file)\n\nuxvar = uxds_a['theta'] - 273.15   ## Kelvin to Celsius\n\ni_lev = 0   # `nVertLevels` index\ni_time = 0  # `Time` index\n\n","type":"content","url":"/notebooks/jedi-mpas#open-uxarray-datasets","position":19},{"hierarchy":{"lvl1":"Visualization of JEDI analysis with UXarray in the model space","lvl2":"plot temperature analysis increments at different levels"},"type":"lvl2","url":"/notebooks/jedi-mpas#plot-temperature-analysis-increments-at-different-levels","position":20},{"hierarchy":{"lvl1":"Visualization of JEDI analysis with UXarray in the model space","lvl2":"plot temperature analysis increments at different levels"},"content":"\n\n%%time\n\nnt=0  # time dimension\nplot_levels = [0, 29, 42]  # [0, 29, 42]  # [0, 19, 29, 39, 49, 58]\n\n# Create the colormap\n# colors = ['blue', 'white', 'red']    \n# cmap = LinearSegmentedColormap.from_list('blue_white_red', colors)\n# zero_shift = 0.02 \n\ncmap = plt.get_cmap('coolwarm')\nzero_shift = 0.0\n\nplots = []\nfor lev in plot_levels:\n    #  use hslice_contour0() which uses 0 divide the cool and warm colors in the plot by default\n    #\n    # tmp = hslice_contour0(\n    #     uxvar.isel(Time=nt, nVertLevels=lev), \n    #     title=f'lev={lev}', \n    #     cmap=cmap, \n    #     zero_shift=zero_shift, \n    #     clevs_multiplier=1,\n    # )  # for the whole domain  \n\n    # hslice_contour() does not dvide the cool and warm colors at 0 by default\n    # But it can be achieved by setting symmetric_cmap=True which will set symmetric cmax/cmin automatically,\n    #       or mannualy setting symmetric cmax/cmin\n    #\n    tmp = hslice_contour(\n        uxvar.isel(Time=nt, nVertLevels=lev), \n        title=f'lev={lev}',\n        symmetric_cmap=True,\n        #clevs=20,\n    )  # for the whole domain\n    \n    plots.append(tmp * coast_lines * state_lines)\n\n# plots share one toolbar, which facilitates doing sync'ed zoom-in/out\n# hv.Layout(plots).cols(1)\n\n# each plot has its own toolbar, which facilitates controlling each plot individually\nfor p in plots:\n   display(p)\n\n","type":"content","url":"/notebooks/jedi-mpas#plot-temperature-analysis-increments-at-different-levels","position":21},{"hierarchy":{"lvl1":"Visualization of JEDI analysis with UXarray in the model space","lvl2":"Zoomed into Colorado using the subset capability"},"type":"lvl2","url":"/notebooks/jedi-mpas#zoomed-into-colorado-using-the-subset-capability","position":22},{"hierarchy":{"lvl1":"Visualization of JEDI analysis with UXarray in the model space","lvl2":"Zoomed into Colorado using the subset capability"},"content":"\n\n%%time\n\nlon_center = -105.03\nlat_center = 39.0\nlon_incr = 5 # degree\nlat_incr = 3 # degree\nlon_bounds = (lon_center - lon_incr, lon_center + lon_incr)\nlat_bounds = (lat_center - lat_incr, lat_center + lat_incr)\n\n### subset to a small domain\nuxdiff1 = uxdiff0.subset.bounding_box(lon_bounds, lat_bounds,)\nuxvar = uxdiff1\n\n\nnt=0  # time dimension\nplot_levels = [42]  # [0, 29, 42]  # [0, 19, 29, 39, 49, 58]\n\nplots = []\nfor lev in plot_levels:\n    tmp = hslice_contour(uxvar.isel(Time=nt, nVertLevels=lev), title=f'lev={lev}', width=700, height=500)  # for the subdomain\n    \n    # overlay state_lines\n    #plots.append(tmp * coast_lines * state_lines)  \n    \n    # overlay county lines, this takes longer time to render\n    plots.append(tmp * coast_lines.opts(xlim=(lon_bounds[0], lon_bounds[1]), ylim=(lat_bounds[0], lat_bounds[1])))\n\n# plots share one toolbar, which facilitates doing sync'ed zoom-in/out\n# hv.Layout(plots).cols(1)\n\n# each plot has its own toolbar, which facilitates controlling each plot individually\nfor p in plots:\n   display(p)\n\n","type":"content","url":"/notebooks/jedi-mpas#zoomed-into-colorado-using-the-subset-capability","position":23},{"hierarchy":{"lvl1":"Visualization of JEDI analysis with UXarray in the model space","lvl2":"vertical cross section of temperature increments"},"type":"lvl2","url":"/notebooks/jedi-mpas#vertical-cross-section-of-temperature-increments","position":24},{"hierarchy":{"lvl1":"Visualization of JEDI analysis with UXarray in the model space","lvl2":"vertical cross section of temperature increments"},"content":"\n\n%%time\n\n# tmp = vslice_contour(uxvar, lon=-85.77, clevels=10)\n# display(tmp)\ntmp = vslice_contour(uxvar, lat=42.63, clevels=10)\ndisplay(tmp)\n\n","type":"content","url":"/notebooks/jedi-mpas#vertical-cross-section-of-temperature-increments","position":25},{"hierarchy":{"lvl1":"Visualization of JEDI analysis with UXarray in the model space","lvl2":"save plots to files"},"type":"lvl2","url":"/notebooks/jedi-mpas#save-plots-to-files","position":26},{"hierarchy":{"lvl1":"Visualization of JEDI analysis with UXarray in the model space","lvl2":"save plots to files"},"content":"\n\nhv.save(tmp, 'vslice.png')","type":"content","url":"/notebooks/jedi-mpas#save-plots-to-files","position":27},{"hierarchy":{"lvl1":"Visualization of JEDI analysis with UXarray in the model space"},"type":"lvl1","url":"/notebooks/jedi-obsspace","position":0},{"hierarchy":{"lvl1":"Visualization of JEDI analysis with UXarray in the model space"},"content":"","type":"content","url":"/notebooks/jedi-obsspace","position":1},{"hierarchy":{"lvl1":"Visualization of JEDI analysis with UXarray in the model space","lvl3":"In this section, you’ll learn:"},"type":"lvl3","url":"/notebooks/jedi-obsspace#in-this-section-youll-learn","position":2},{"hierarchy":{"lvl1":"Visualization of JEDI analysis with UXarray in the model space","lvl3":"In this section, you’ll learn:"},"content":"Utilizing ...","type":"content","url":"/notebooks/jedi-obsspace#in-this-section-youll-learn","position":3},{"hierarchy":{"lvl1":"Visualization of JEDI analysis with UXarray in the model space","lvl3":"Related Documentation"},"type":"lvl3","url":"/notebooks/jedi-obsspace#related-documentation","position":4},{"hierarchy":{"lvl1":"Visualization of JEDI analysis with UXarray in the model space","lvl3":"Related Documentation"},"content":"URL title\n\n","type":"content","url":"/notebooks/jedi-obsspace#related-documentation","position":5},{"hierarchy":{"lvl1":"Visualization of JEDI analysis with UXarray in the model space","lvl3":"Prerequisites"},"type":"lvl3","url":"/notebooks/jedi-obsspace#prerequisites","position":6},{"hierarchy":{"lvl1":"Visualization of JEDI analysis with UXarray in the model space","lvl3":"Prerequisites"},"content":"Concepts\n\nImportance\n\nNotes\n\nURL title\n\nNecessary OR Helpful?\n\n\n\nTime to learn: 30 minutes?\n\n","type":"content","url":"/notebooks/jedi-obsspace#prerequisites","position":7},{"hierarchy":{"lvl1":"Visualization of JEDI analysis with UXarray in the model space","lvl2":"Import packages"},"type":"lvl2","url":"/notebooks/jedi-obsspace#import-packages","position":8},{"hierarchy":{"lvl1":"Visualization of JEDI analysis with UXarray in the model space","lvl2":"Import packages"},"content":"\n\n%%time \n\n# autoload external python modules if they changed\n%load_ext autoreload\n%autoreload 2\n\n# add ../funcs to the current path\nimport sys, os\nsys.path.append(os.path.join(os.getcwd(), \"..\")) \n\n# import modules\nimport warnings\nimport math\n\nimport cartopy.crs as ccrs\nimport geoviews as gv\nimport geoviews.feature as gf\nimport holoviews as hv\nimport hvplot.xarray\nfrom holoviews import opts\nimport matplotlib.pyplot as plt\n\nimport s3fs\nimport seaborn as sns  # seaborn handles NaN values automatically\n\nimport geopandas as gp\nimport numpy as np\nimport uxarray as ux\nimport xarray as xr\n\n","type":"content","url":"/notebooks/jedi-obsspace#import-packages","position":9},{"hierarchy":{"lvl1":"Visualization of JEDI analysis with UXarray in the model space","lvl2":"Configure visualization tools"},"type":"lvl2","url":"/notebooks/jedi-obsspace#configure-visualization-tools","position":10},{"hierarchy":{"lvl1":"Visualization of JEDI analysis with UXarray in the model space","lvl2":"Configure visualization tools"},"content":"\n\n# hv.extension(\"bokeh\")\n# hv.extension(\"matplotlib\")\n\n\n# common border lines\ncoast_lines = gf.coastline(projection=ccrs.PlateCarree(), line_width=1, scale=\"50m\")\nstate_lines = gf.states(projection=ccrs.PlateCarree(), line_width=1, line_color='gray', scale=\"50m\")\n\n","type":"content","url":"/notebooks/jedi-obsspace#configure-visualization-tools","position":11},{"hierarchy":{"lvl1":"Visualization of JEDI analysis with UXarray in the model space","lvl2":"Load MPAS data"},"type":"lvl2","url":"/notebooks/jedi-obsspace#load-mpas-data","position":12},{"hierarchy":{"lvl1":"Visualization of JEDI analysis with UXarray in the model space","lvl2":"Load MPAS data"},"content":"Depending on the network, the data loading process may take a few minutes.\n\nThere are two ways to load MPAS data:\n\nDownload all example data from JetStream2 to local and them load them locally. This approach allows you to download the data once and reuse it in notebooks.\n\nAccess the JetStream2 S3 objects on demand. In this case, each notebook (incluidng restarting a notebook) will download the required data as needed, which may lead to repeated downloads.\n\ndata_load_method = 1  # or 2\n\n","type":"content","url":"/notebooks/jedi-obsspace#load-mpas-data","position":13},{"hierarchy":{"lvl1":"Visualization of JEDI analysis with UXarray in the model space","lvl3":"Download all example data to your local disk","lvl2":"Load MPAS data"},"type":"lvl3","url":"/notebooks/jedi-obsspace#download-all-example-data-to-your-local-disk","position":14},{"hierarchy":{"lvl1":"Visualization of JEDI analysis with UXarray in the model space","lvl3":"Download all example data to your local disk","lvl2":"Load MPAS data"},"content":"\n\n%%time\n# This cell only needs to run once in a machine and can be converted to a MarkDown cell before publishing the cookbook\n\nlocal_dir=\"/tmp\"\nif data_load_method == 1 and not os.path.exists(local_dir + \"/conus12km/bkg/mpasout.2024-05-06_01.00.00.nc\"):\n    jetstream_url = 'https://js2.jetstream-cloud.org:8001/'\n    fs = s3fs.S3FileSystem(anon=True, asynchronous=False,client_kwargs=dict(endpoint_url=jetstream_url))\n    conus12_path = 's3://pythia/mpas/conus12km'\n    fs.get(conus12_path, local_dir, recursive=True)\n    print(\"Data downloading completed\")\nelse:\n    print(\"Skip..., either data is available in local or data_load_method is NOT 1\")\n\n# path to the MPAS data\nif data_load_method == 1:\n    grid_file = local_dir + \"/conus12km/conus12km.invariant.nc_L60_GFS\"\n    ana_file = local_dir + \"/conus12km/bkg/mpasout.2024-05-06_01.00.00.nc\"\n    bkg_file = local_dir + \"/conus12km/ana/mpasout.2024-05-06_01.00.00.nc\"\n    jdiag_file = local_dir + \"/conus12km/jdiag_aircar_t133.nc\"  #q133.nc or uv233.nc\n\n","type":"content","url":"/notebooks/jedi-obsspace#download-all-example-data-to-your-local-disk","position":15},{"hierarchy":{"lvl1":"Visualization of JEDI analysis with UXarray in the model space","lvl3":"access JetStream2 and S3 objects on demand","lvl2":"Load MPAS data"},"type":"lvl3","url":"/notebooks/jedi-obsspace#access-jetstream2-and-s3-objects-on-demand","position":16},{"hierarchy":{"lvl1":"Visualization of JEDI analysis with UXarray in the model space","lvl3":"access JetStream2 and S3 objects on demand","lvl2":"Load MPAS data"},"content":"\n\n%%time\n## **!! skip this section if data has been downloaded to local in the above !!**\nif data_load_method == 2:\n    jetstream_url = 'https://js2.jetstream-cloud.org:8001/'\n    fs = s3fs.S3FileSystem(anon=True, asynchronous=False,client_kwargs=dict(endpoint_url=jetstream_url))\n    conus12_path = 's3://pythia/mpas/conus12km'\n    \n    # grid_url=f\"{conus12_path}/conus12km.invariant.nc_L60_GFS\"\n    # bkg_url=f\"{conus12_path}/bkg/mpasout.2024-05-06_01.00.00.nc\"\n    # ana_url=f\"{conus12_path}/ana/mpasout.2024-05-06_01.00.00.nc\"\n    jdiag_url=f\"{conus12_path}/jdiag_aircar_t133.nc\"\n    \n    # grid_file = fs.open(grid_url)\n    # ana_file = fs.open(ana_url)\n    # bkg_file = fs.open(bkg_url)\n    jdiag_file = fs.open(jdiag_url)\nelse:\n    print(\"Skip..., data_load_method is NOT 2\")\n\nfrom obsSpace import obsSpace, fit_rate, query_data, to_dataframe\n\naircar = obsSpace(jdiag_file)\n\nquery_data(aircar.t)\n\ndf = to_dataframe(aircar.t)\ndf\n\n# plot histogram of OmA\n\nplt.figure(figsize=(8, 5))\n#sns.histplot(df[\"oman\"], bins=50, kde=True, color=\"steelblue\")\nsns.histplot(aircar.t.oman, bins=100, kde=True, color=\"steelblue\")\nplt.title(\"Histogram of oman\")\nplt.xlabel(\"oman values\")\nplt.ylabel(\"Density\")\nplt.tight_layout()\nplt.show()\n\n# overlay OMB and OMA histogram together\n\ndf_long = df[[\"oman\", \"ombg\"]].melt(var_name=\"variable\", value_name=\"value\")\n\nplt.figure(figsize=(8, 5))\nsns.histplot(data=df_long, x=\"value\", hue=\"variable\", bins=50, kde=True, element=\"step\", stat=\"count\")\nplt.title(\"Overlayed Histogram: oman vs ombg\")\nplt.tight_layout()\nplt.show()\n\n# overlay OMB and OMA histogram together\n\nplt.figure(figsize=(8, 5))\nsns.histplot(df[\"oman\"], bins=100, kde=True, color=\"blue\", label=\"oman\", multiple=\"layer\")\nsns.histplot(df[\"ombg\"], bins=100, kde=True, color=\"red\", label=\"ombg\", multiple=\"layer\")\n\nplt.title(\"Overlayed Histogram: oman vs ombg\")\nplt.xlabel(\"Value\")\nplt.ylabel(\"Frequency\")\nplt.legend()\nplt.tight_layout()\nplt.show()\n\n","type":"content","url":"/notebooks/jedi-obsspace#access-jetstream2-and-s3-objects-on-demand","position":17},{"hierarchy":{"lvl1":"Visualization of JEDI analysis with UXarray in the model space","lvl2":"fit rate and plotting"},"type":"lvl2","url":"/notebooks/jedi-obsspace#fit-rate-and-plotting","position":18},{"hierarchy":{"lvl1":"Visualization of JEDI analysis with UXarray in the model space","lvl2":"fit rate and plotting"},"content":"\n\n# 1. Filter valid data (both 'oman' and 'ombg' are not NaN)\nvalid_df = df[df[\"oman\"].notna() & df[\"ombg\"].notna()].copy()\nvalid_df = valid_df.dropna(subset=[\"height\"])  # removes any rows in valid_df where height is missing (NaN)\nprint(valid_df[valid_df[\"height\"] < 0][\"height\"])   # negative height\n\ndz = 1000\ngrouped = fit_rate(aircar.t, dz=dz)\n\n# 5. Plot vertical profile of fit_rate vs height\nplt.figure(figsize=(7, 6))\nplt.plot(grouped[\"fit_rate\"], grouped[\"height_bin\"], marker=\"o\", color=\"blue\")\n# plt.axvline(x=0, color=\"gray\", linestyle=\"--\")  # ax vertical line\n\nplt.xlabel(\"Fit Rate (%)\")  # label change\nplt.gca().xaxis.set_major_formatter(plt.FuncFormatter(lambda x, _: f'{x*100:.0f}%'))  # format as %\nplt.ylabel(\"Height Bin (m)\")\nplt.title(\"Vertical Profile of Fit Rate\")\n\n# Fine-tune ticks\nplt.xticks(np.arange(0, 0.25, 0.05))  #, fontsize=12)\nplt.yticks(np.arange(0, 13000, dz))  #, , fontsize=12)\n# Add minor ticks\nfrom matplotlib.ticker import AutoMinorLocator\nplt.gca().xaxis.set_minor_locator(AutoMinorLocator())\nplt.gca().yaxis.set_minor_locator(AutoMinorLocator())\n# plt.grid(which='both', linestyle='--', linewidth=0.5)\nplt.grid(True)\n\nplt.ylim(0, 13000)  # set y-axis from 0 (bottom) to 13,000 (top)\nplt.tight_layout()\nplt.show()\n\nprint(grouped[\"height_bin\"])","type":"content","url":"/notebooks/jedi-obsspace#fit-rate-and-plotting","position":19},{"hierarchy":{"lvl1":"Advanced MPAS Analysis & Visualization with UXarray"},"type":"lvl1","url":"/notebooks/mpas-advanced","position":0},{"hierarchy":{"lvl1":"Advanced MPAS Analysis & Visualization with UXarray"},"content":"","type":"content","url":"/notebooks/mpas-advanced","position":1},{"hierarchy":{"lvl1":"Advanced MPAS Analysis & Visualization with UXarray","lvl3":"In this section, you’ll learn:"},"type":"lvl3","url":"/notebooks/mpas-advanced#in-this-section-youll-learn","position":2},{"hierarchy":{"lvl1":"Advanced MPAS Analysis & Visualization with UXarray","lvl3":"In this section, you’ll learn:"},"content":"Utilizing ...","type":"content","url":"/notebooks/mpas-advanced#in-this-section-youll-learn","position":3},{"hierarchy":{"lvl1":"Advanced MPAS Analysis & Visualization with UXarray","lvl3":"Related Documentation"},"type":"lvl3","url":"/notebooks/mpas-advanced#related-documentation","position":4},{"hierarchy":{"lvl1":"Advanced MPAS Analysis & Visualization with UXarray","lvl3":"Related Documentation"},"content":"URL title\n\n","type":"content","url":"/notebooks/mpas-advanced#related-documentation","position":5},{"hierarchy":{"lvl1":"Advanced MPAS Analysis & Visualization with UXarray","lvl3":"Prerequisites"},"type":"lvl3","url":"/notebooks/mpas-advanced#prerequisites","position":6},{"hierarchy":{"lvl1":"Advanced MPAS Analysis & Visualization with UXarray","lvl3":"Prerequisites"},"content":"Concepts\n\nImportance\n\nNotes\n\nURL title\n\nNecessary OR Helpful?\n\n\n\nTime to learn: 30 minutes?\n\n","type":"content","url":"/notebooks/mpas-advanced#prerequisites","position":7},{"hierarchy":{"lvl1":"Advanced MPAS Analysis & Visualization with UXarray","lvl2":"Import packages"},"type":"lvl2","url":"/notebooks/mpas-advanced#import-packages","position":8},{"hierarchy":{"lvl1":"Advanced MPAS Analysis & Visualization with UXarray","lvl2":"Import packages"},"content":"\n\n%%time \n\n# autoload external python modules if they changed\n%load_ext autoreload\n%autoreload 2\n\n# add ../funcs to the current path\nimport sys, os\nsys.path.append(os.path.join(os.getcwd(), \"..\")) \n\n# import modules\nimport warnings\nimport math\n\nimport cartopy.crs as ccrs\nimport geoviews as gv\nimport geoviews.feature as gf\nimport holoviews as hv\nimport hvplot.xarray\nfrom holoviews import opts\nimport matplotlib.pyplot as plt\n\nimport s3fs\n\nimport geopandas as gp\nimport numpy as np\nimport uxarray as ux\nimport xarray as xr\n\n","type":"content","url":"/notebooks/mpas-advanced#import-packages","position":9},{"hierarchy":{"lvl1":"Advanced MPAS Analysis & Visualization with UXarray","lvl2":"Configure visualization tools"},"type":"lvl2","url":"/notebooks/mpas-advanced#configure-visualization-tools","position":10},{"hierarchy":{"lvl1":"Advanced MPAS Analysis & Visualization with UXarray","lvl2":"Configure visualization tools"},"content":"\n\n# hv.extension(\"bokeh\")\n# hv.extension(\"matplotlib\")\n\n\n# common border lines\ncoast_lines = gf.coastline(projection=ccrs.PlateCarree(), line_width=1, scale=\"50m\")\nstate_lines = gf.states(projection=ccrs.PlateCarree(), line_width=1, line_color='gray', scale=\"50m\")\n\n","type":"content","url":"/notebooks/mpas-advanced#configure-visualization-tools","position":11},{"hierarchy":{"lvl1":"Advanced MPAS Analysis & Visualization with UXarray","lvl2":"Load MPAS data"},"type":"lvl2","url":"/notebooks/mpas-advanced#load-mpas-data","position":12},{"hierarchy":{"lvl1":"Advanced MPAS Analysis & Visualization with UXarray","lvl2":"Load MPAS data"},"content":"Depending on the network, the data loading process may take a few minutes\n\n","type":"content","url":"/notebooks/mpas-advanced#load-mpas-data","position":13},{"hierarchy":{"lvl1":"Advanced MPAS Analysis & Visualization with UXarray","lvl3":"Data paths to the JetStream2 and S3 objects","lvl2":"Load MPAS data"},"type":"lvl3","url":"/notebooks/mpas-advanced#data-paths-to-the-jetstream2-and-s3-objects","position":14},{"hierarchy":{"lvl1":"Advanced MPAS Analysis & Visualization with UXarray","lvl3":"Data paths to the JetStream2 and S3 objects","lvl2":"Load MPAS data"},"content":"\n\n%%time\n\njetstream_url = 'https://js2.jetstream-cloud.org:8001/'\nfs = s3fs.S3FileSystem(anon=True, asynchronous=False,client_kwargs=dict(endpoint_url=jetstream_url))\nconus12_path = 's3://pythia/mpas/conus12km'\n\ngrid_url=f\"{conus12_path}/conus12km.invariant.nc_L60_GFS\"\nbkg_url=f\"{conus12_path}/bkg/mpasout.2024-05-06_01.00.00.nc\"\nana_url=f\"{conus12_path}/ana/mpasout.2024-05-06_01.00.00.nc\"\n\ngrid_file = fs.open(grid_url)\nana_file = fs.open(ana_url)\nbkg_file = fs.open(bkg_url)\n\n","type":"content","url":"/notebooks/mpas-advanced#data-paths-to-the-jetstream2-and-s3-objects","position":15},{"hierarchy":{"lvl1":"Advanced MPAS Analysis & Visualization with UXarray","lvl3":"Open UXarray datasets","lvl2":"Load MPAS data"},"type":"lvl3","url":"/notebooks/mpas-advanced#open-uxarray-datasets","position":16},{"hierarchy":{"lvl1":"Advanced MPAS Analysis & Visualization with UXarray","lvl3":"Open UXarray datasets","lvl2":"Load MPAS data"},"content":"\n\n%%time \n\nuxds_a = ux.open_dataset(grid_file, ana_file)\nuxds_b = ux.open_dataset(grid_file, bkg_file)\n\nuxvar = uxds_a['theta'] - 273.15   ## Kelvin to Celsius\n\nAlso, for simplicity, let’s focus at the vertical level and time indices of 0.\n\ni_lev = 0   # `nVertLevels` index\ni_time = 0  # `Time` index\n\n","type":"content","url":"/notebooks/mpas-advanced#open-uxarray-datasets","position":17},{"hierarchy":{"lvl1":"Advanced MPAS Analysis & Visualization with UXarray","lvl2":"Vertical cross section"},"type":"lvl2","url":"/notebooks/mpas-advanced#vertical-cross-section","position":18},{"hierarchy":{"lvl1":"Advanced MPAS Analysis & Visualization with UXarray","lvl2":"Vertical cross section"},"content":"\n\n# %%time\n\n# tmp = vslice_contour(uxvar, lat=42.63, clevels=10)\n# display(tmp)\n\nLet us use UXarray’s vertical cross-section function to get a cross-section over a great circle arc:\n\n%%time\n\nstart_point = (-120, 20)\nend_point = (-70, 50)\n\ncross_section_gca = uxvar.cross_section(start=start_point, end=end_point, steps=100)\n\nUXarray’s cross-section returns an xarray.DataArray that can then be plotted:\n\ncross_section_gca.isel(Time=0).transpose().plot.contourf()","type":"content","url":"/notebooks/mpas-advanced#vertical-cross-section","position":19},{"hierarchy":{"lvl1":"Basic MPAS Analysis & Visualization with UXarray"},"type":"lvl1","url":"/notebooks/mpas-basic","position":0},{"hierarchy":{"lvl1":"Basic MPAS Analysis & Visualization with UXarray"},"content":"","type":"content","url":"/notebooks/mpas-basic","position":1},{"hierarchy":{"lvl1":"Basic MPAS Analysis & Visualization with UXarray","lvl3":"In this section, you’ll learn:"},"type":"lvl3","url":"/notebooks/mpas-basic#in-this-section-youll-learn","position":2},{"hierarchy":{"lvl1":"Basic MPAS Analysis & Visualization with UXarray","lvl3":"In this section, you’ll learn:"},"content":"How to interact with MPAS data: retrieving, subsetting and storing data\n\nHow to visualize horizontal data, i.e. data from a single altitude","type":"content","url":"/notebooks/mpas-basic#in-this-section-youll-learn","position":3},{"hierarchy":{"lvl1":"Basic MPAS Analysis & Visualization with UXarray","lvl3":"Related Documentation"},"type":"lvl3","url":"/notebooks/mpas-basic#related-documentation","position":4},{"hierarchy":{"lvl1":"Basic MPAS Analysis & Visualization with UXarray","lvl3":"Related Documentation"},"content":"URL title\n\n","type":"content","url":"/notebooks/mpas-basic#related-documentation","position":5},{"hierarchy":{"lvl1":"Basic MPAS Analysis & Visualization with UXarray","lvl3":"Prerequisites"},"type":"lvl3","url":"/notebooks/mpas-basic#prerequisites","position":6},{"hierarchy":{"lvl1":"Basic MPAS Analysis & Visualization with UXarray","lvl3":"Prerequisites"},"content":"Concepts\n\nImportance\n\nNotes\n\nUXarray\n\nNecessary\n\n\n\nUnstructured Grid\n\nNecessary\n\n\n\nTime to learn: 30 minutes?\n\n","type":"content","url":"/notebooks/mpas-basic#prerequisites","position":7},{"hierarchy":{"lvl1":"Basic MPAS Analysis & Visualization with UXarray","lvl2":"Import packages"},"type":"lvl2","url":"/notebooks/mpas-basic#import-packages","position":8},{"hierarchy":{"lvl1":"Basic MPAS Analysis & Visualization with UXarray","lvl2":"Import packages"},"content":"We use Cartopy, GeoViews, Holoviews and Matplotlib packages for visualization. Xarray, UXarray, NumPy and GeoPandas are used for the data structures we use to represent and manipulate the data.\n\n# autoload external python modules if they changed\n%load_ext autoreload\n%autoreload 2\n\n# add ../funcs to the current path\nimport sys, os\nsys.path.append(os.path.join(os.getcwd(), \"..\")) \n\n# import modules\nimport warnings\nimport math\n\nimport cartopy.crs as ccrs\nimport geoviews as gv\nimport geoviews.feature as gf\nimport holoviews as hv\nimport hvplot.xarray\nfrom holoviews import opts\nimport matplotlib.pyplot as plt\n\nimport s3fs\n\nimport geopandas as gp\nimport numpy as np\nimport uxarray as ux\nimport xarray as xr\n\n","type":"content","url":"/notebooks/mpas-basic#import-packages","position":9},{"hierarchy":{"lvl1":"Basic MPAS Analysis & Visualization with UXarray","lvl2":"Retrieving the state outlines and coastlines"},"type":"lvl2","url":"/notebooks/mpas-basic#retrieving-the-state-outlines-and-coastlines","position":10},{"hierarchy":{"lvl1":"Basic MPAS Analysis & Visualization with UXarray","lvl2":"Retrieving the state outlines and coastlines"},"content":"\n\ncoast_lines = gf.coastline(projection=ccrs.PlateCarree(), line_width=1, scale=\"50m\")\nstate_lines = gf.states(projection=ccrs.PlateCarree(), line_width=1, line_color='gray', scale=\"50m\")\n\n","type":"content","url":"/notebooks/mpas-basic#retrieving-the-state-outlines-and-coastlines","position":11},{"hierarchy":{"lvl1":"Basic MPAS Analysis & Visualization with UXarray","lvl2":"Helper functions"},"type":"lvl2","url":"/notebooks/mpas-basic#helper-functions","position":12},{"hierarchy":{"lvl1":"Basic MPAS Analysis & Visualization with UXarray","lvl2":"Helper functions"},"content":"The following functions are used for visualizing the data. The horizontal_contour function generates the contour map for a given slice of data.\n\n# Generates a contour plot for a horizontal slice\ndef horizontal_contour(ux_hslice, title, cmin=None, cmax=None, width=800, height=500, clevs=20, cmap=\"coolwarm\", symmetric_cmap=False):\n\n\\\n    # Get min and max\n    amin = ux_hslice.min().item()\n    amax = ux_hslice.max().item()\n    \n    cmin = math.floor(amin) if(cmin is None) else cmin\n    cmax = math.ceil(amax) if(cmax is None) else cmax\n    \n    if symmetric_cmap:  # get a symmetric color map when cmin < 0, cmax >0\n        cmax = max(abs(cmin), cmax)\n        cmin = -cmax\n\n    if isinstance(cmap, str):\n        cmap = plt.get_cmap(cmap)\n\n    # Generate contour plot\n    title = f\" min={amin:.1f} max={amax:.1f}\"\n    \n    contour_plot = hv.operation.contours(\n        ux_hslice.plot(),\n        levels=np.linspace(cmin, cmax, num=clevs),  # levels=np.arange(cmin, cmax, 0.5)\n        filled=True\n    ).opts(\n        line_color=None,  # line_width=0.001\n        width=width, height=height,\n        cmap='coolwarm', clim=(cmin, cmax),\n        colorbar=True, show_legend=False,\n        tools=['hover'], title=title\n    )\n\n    return contour_plot\n\n","type":"content","url":"/notebooks/mpas-basic#helper-functions","position":13},{"hierarchy":{"lvl1":"Basic MPAS Analysis & Visualization with UXarray","lvl2":"Downloading the MPAS data"},"type":"lvl2","url":"/notebooks/mpas-basic#downloading-the-mpas-data","position":14},{"hierarchy":{"lvl1":"Basic MPAS Analysis & Visualization with UXarray","lvl2":"Downloading the MPAS data"},"content":"\n\njetstream_url = 'https://js2.jetstream-cloud.org:8001/'\nfs = s3fs.S3FileSystem(anon=True, asynchronous=False,client_kwargs=dict(endpoint_url=jetstream_url))\nconus12_path = 's3://pythia/mpas/conus12km'\n\n# Data paths to the JetStream2 and S3 objects\ngrid_url=f\"{conus12_path}/conus12km.invariant.nc_L60_GFS\"\nbkg_url=f\"{conus12_path}/bkg/mpasout.2024-05-06_01.00.00.nc\"\nana_url=f\"{conus12_path}/ana/mpasout.2024-05-06_01.00.00.nc\"\n\ngrid_file = fs.open(grid_url)\nana_file = fs.open(ana_url)\nbkg_file = fs.open(bkg_url)\n\n","type":"content","url":"/notebooks/mpas-basic#downloading-the-mpas-data","position":15},{"hierarchy":{"lvl1":"Basic MPAS Analysis & Visualization with UXarray","lvl3":"Loading the data into UXarray datasets","lvl2":"Downloading the MPAS data"},"type":"lvl3","url":"/notebooks/mpas-basic#loading-the-data-into-uxarray-datasets","position":16},{"hierarchy":{"lvl1":"Basic MPAS Analysis & Visualization with UXarray","lvl3":"Loading the data into UXarray datasets","lvl2":"Downloading the MPAS data"},"content":"We use the UXarray data structures for working with the data. This package supports data defined over unstructured grid and provides utilities for modifying and visualizing it. The available fucntionality are discussed in UxDataset \n\ndocumentation.\n\nWarning\n\nDepending on the network conditions, loading the data can take a few minutes.\n\nuxds_a = ux.open_dataset(grid_file, ana_file)\nuxds_b = ux.open_dataset(grid_file, bkg_file)\n\n","type":"content","url":"/notebooks/mpas-basic#loading-the-data-into-uxarray-datasets","position":17},{"hierarchy":{"lvl1":"Basic MPAS Analysis & Visualization with UXarray","lvl2":"Regional temperature contour"},"type":"lvl2","url":"/notebooks/mpas-basic#regional-temperature-contour","position":18},{"hierarchy":{"lvl1":"Basic MPAS Analysis & Visualization with UXarray","lvl2":"Regional temperature contour"},"content":"\n\nWe use the theta (potential temperature) variable from this dataset, which has a (Time, n_face, nVertLevels), i.e. Time * Number of grid faces * Number of vertical levels dimensionality to have a look at a regional, horizontal plot.\n\nuxvar = uxds_a['theta'] - 273.15   ## Kelvin to Celsius\n\nThe data has multiple vertical layers, representing the values for multiple elevation levels. In this section, we are focusing on a single level. Next, we are plotting the contour of theta values in the data for this fixed level.\n\ni_lev = 0   # `nVertLevels` index, for picking the 0th level\ni_time = 0  # `Time` index\nlat_level, long_level = 42.63, -108 # The latitude and longitude levels we will use in the next section\n\nplot = horizontal_contour(uxvar.isel(Time=0, nVertLevels=i_lev), title=f'Contour plot for potential temperature over a region at vertical level 0') #, symmetric_cmap=True)\nlat_line = hv.Curve(([-134, -61], [lat_level, lat_level])).opts(line_width=3, color=\"black\")\nlong_line = hv.Curve(([long_level, long_level], [20, 57])).opts(line_width=3, color=\"black\")\nplot * coast_lines * state_lines * lat_line * long_line\n\nNote\n\nIn the next section, we will work on processing multiple vertical layers via cross-sections. The vertical black lines on the map show the latitude and longitude values we will take the vertical slices over in those exercises.","type":"content","url":"/notebooks/mpas-basic#regional-temperature-contour","position":19},{"hierarchy":{"lvl1":"RRFSv2 Overview"},"type":"lvl1","url":"/notebooks/overview-jedi","position":0},{"hierarchy":{"lvl1":"RRFSv2 Overview"},"content":"","type":"content","url":"/notebooks/overview-jedi","position":1},{"hierarchy":{"lvl1":"RRFSv2 Overview","lvl2":"In this section, you’ll learn:"},"type":"lvl2","url":"/notebooks/overview-jedi#in-this-section-youll-learn","position":2},{"hierarchy":{"lvl1":"RRFSv2 Overview","lvl2":"In this section, you’ll learn:"},"content":"Utilizing ...","type":"content","url":"/notebooks/overview-jedi#in-this-section-youll-learn","position":3},{"hierarchy":{"lvl1":"RRFSv2 Overview","lvl2":"Related Documentation"},"type":"lvl2","url":"/notebooks/overview-jedi#related-documentation","position":4},{"hierarchy":{"lvl1":"RRFSv2 Overview","lvl2":"Related Documentation"},"content":"URL title\n\n","type":"content","url":"/notebooks/overview-jedi#related-documentation","position":5},{"hierarchy":{"lvl1":"RRFSv2 Overview","lvl2":"Prerequisites"},"type":"lvl2","url":"/notebooks/overview-jedi#prerequisites","position":6},{"hierarchy":{"lvl1":"RRFSv2 Overview","lvl2":"Prerequisites"},"content":"Concepts\n\nImportance\n\nNotes\n\nURL title\n\nNecessary OR Helpful?\n\n\n\nTime to learn: 30 minutes?","type":"content","url":"/notebooks/overview-jedi#prerequisites","position":7},{"hierarchy":{"lvl1":"MPAS Overview"},"type":"lvl1","url":"/notebooks/overview-mpas","position":0},{"hierarchy":{"lvl1":"MPAS Overview"},"content":"In this first section of the cookbook, we would like to provide an introduction to \n\nModel for Prediction Across Scales (MPAS). Please note, instead of trying to replicate what has already been made available by the MPAS user and developer community, we will point this this cookrbook’s readers to the right direction to access such resources.\n\n","type":"content","url":"/notebooks/overview-mpas","position":1},{"hierarchy":{"lvl1":"MPAS Overview","lvl3":"In this section, you’ll not code but learn:"},"type":"lvl3","url":"/notebooks/overview-mpas#in-this-section-youll-not-code-but-learn","position":2},{"hierarchy":{"lvl1":"MPAS Overview","lvl3":"In this section, you’ll not code but learn:"},"content":"What is MPAS?\n\nWhy MPAS?","type":"content","url":"/notebooks/overview-mpas#in-this-section-youll-not-code-but-learn","position":3},{"hierarchy":{"lvl1":"MPAS Overview","lvl3":"Related Documentation"},"type":"lvl3","url":"/notebooks/overview-mpas#related-documentation","position":4},{"hierarchy":{"lvl1":"MPAS Overview","lvl3":"Related Documentation"},"content":"MPAS Homepage\n\nMPAS Documentation\n\nMPAS Publications\n\nMPAS Support Forum","type":"content","url":"/notebooks/overview-mpas#related-documentation","position":5},{"hierarchy":{"lvl1":"MPAS Overview","lvl3":"Prerequisites"},"type":"lvl3","url":"/notebooks/overview-mpas#prerequisites","position":6},{"hierarchy":{"lvl1":"MPAS Overview","lvl3":"Prerequisites"},"content":"Concepts\n\nImportance\n\nNotes\n\nIntroduction to Unstructured Grids\n\nHelpful\n\n\n\nTime to learn: 10 minutes\n\n\n\n","type":"content","url":"/notebooks/overview-mpas#prerequisites","position":7},{"hierarchy":{"lvl1":"MPAS Overview","lvl2":"What is MPAS?"},"type":"lvl2","url":"/notebooks/overview-mpas#what-is-mpas","position":8},{"hierarchy":{"lvl1":"MPAS Overview","lvl2":"What is MPAS?"},"content":"\n\nThe Model for Prediction Across Scales (MPAS) is a collaborative project for developing atmosphere, ocean and other earth-system simulation components for use in climate, regional climate and weather studies.\n\nThe defining features of MPAS are the unstructured \n\nVoronoi meshes and \n\nC-grid discretization used as the basis for many of the model components. The unstructured Voronoi meshes, formally Spherical Centriodal Voronoi Tesselations (SCVTs), allow for both quasi-uniform discretization of the sphere and local refinement. The C-grid discretization, where the normal component of velocity on cell edges is prognosed, is especially well-suited for higher-resolution, mesoscale atmosphere and ocean simulations.\n\nThe land ice model takes advantage of the SCVT-dual mesh, which is a triangular Delaunay tessellation appropriate for use with Finite-Element-based discretizations.\n\nBe sure to check out the \n\nMPAS home page and the References at the end of this section for further details.\n\nImage credit: \n\nhttps://​mpas​-dev​.github​.io​/atmosphere​/atmosphere​.html\n\n","type":"content","url":"/notebooks/overview-mpas#what-is-mpas","position":9},{"hierarchy":{"lvl1":"MPAS Overview","lvl2":"Why MPAS?"},"type":"lvl2","url":"/notebooks/overview-mpas#why-mpas","position":10},{"hierarchy":{"lvl1":"MPAS Overview","lvl2":"Why MPAS?"},"content":"\n\nThe key features of MPAS are:\n\nSuitability for global and regional analysis\n\nApplicability to weather and climate research\n\nVariable resolution\n\nScalability\n\n","type":"content","url":"/notebooks/overview-mpas#why-mpas","position":11},{"hierarchy":{"lvl1":"MPAS Overview","lvl2":"References"},"type":"lvl2","url":"/notebooks/overview-mpas#references","position":12},{"hierarchy":{"lvl1":"MPAS Overview","lvl2":"References"},"content":"MPAS Mesh Specification Version 1.0, 2015\n\n","type":"content","url":"/notebooks/overview-mpas#references","position":13},{"hierarchy":{"lvl1":"MPAS Overview","lvl2":"What is next?"},"type":"lvl2","url":"/notebooks/overview-mpas#what-is-next","position":14},{"hierarchy":{"lvl1":"MPAS Overview","lvl2":"What is next?"},"content":"The \n\nnext section will provide an overview of the The Joint Effort for Data assimilation (JEDI).","type":"content","url":"/notebooks/overview-mpas#what-is-next","position":15},{"hierarchy":{"lvl1":"JEDI Overview"},"type":"lvl1","url":"/notebooks/overview-rrfsv2","position":0},{"hierarchy":{"lvl1":"JEDI Overview"},"content":"","type":"content","url":"/notebooks/overview-rrfsv2","position":1},{"hierarchy":{"lvl1":"JEDI Overview","lvl2":"In this section, you’ll learn:"},"type":"lvl2","url":"/notebooks/overview-rrfsv2#in-this-section-youll-learn","position":2},{"hierarchy":{"lvl1":"JEDI Overview","lvl2":"In this section, you’ll learn:"},"content":"Utilizing ...","type":"content","url":"/notebooks/overview-rrfsv2#in-this-section-youll-learn","position":3},{"hierarchy":{"lvl1":"JEDI Overview","lvl2":"Related Documentation"},"type":"lvl2","url":"/notebooks/overview-rrfsv2#related-documentation","position":4},{"hierarchy":{"lvl1":"JEDI Overview","lvl2":"Related Documentation"},"content":"URL title\n\n","type":"content","url":"/notebooks/overview-rrfsv2#related-documentation","position":5},{"hierarchy":{"lvl1":"JEDI Overview","lvl2":"Prerequisites"},"type":"lvl2","url":"/notebooks/overview-rrfsv2#prerequisites","position":6},{"hierarchy":{"lvl1":"JEDI Overview","lvl2":"Prerequisites"},"content":"Concepts\n\nImportance\n\nNotes\n\nURL title\n\nNecessary OR Helpful?\n\n\n\nTime to learn: 30 minutes?","type":"content","url":"/notebooks/overview-rrfsv2#prerequisites","position":7}]}